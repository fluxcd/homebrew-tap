# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Flux < Formula
  desc "Flux CLI"
  homepage "https://fluxcd.io/"
  version "0.18.1"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.1/flux_0.18.1_darwin_amd64.tar.gz"
      sha256 "277d50715fa7353a90223482221040949ed552fe2f7694242d66490cdd53d256"
    end
    if Hardware::CPU.arm?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.1/flux_0.18.1_darwin_arm64.tar.gz"
      sha256 "5adec20010fdc273a8daf2dcb4619c54ca08aa32201acd06bd0a9a0adb9accb7"
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.1/flux_0.18.1_linux_arm64.tar.gz"
      sha256 "5ca329c055ba3e2ff19f7d90b83499101f8c972b3366560910209f5e211e12a0"
    end
    if Hardware::CPU.intel?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.1/flux_0.18.1_linux_amd64.tar.gz"
      sha256 "87586ef770ae2d9e2681ceb8c6ac4290ca0eae18fbb964e29caed987020bc394"
    end
  end

  def install
    bin.install "flux"

    bash_output = Utils.safe_popen_read(bin/"flux", "completion", "bash")
    (bash_completion/"flux").write bash_output

    zsh_output = Utils.safe_popen_read(bin/"flux", "completion", "zsh")
    (zsh_completion/"_flux").write zsh_output

    fish_output = Utils.safe_popen_read(bin/"flux", "completion", "fish")
    (fish_completion/"flux.fish").write fish_output
  end

  test do
    system "#{bin}/flux --version"
  end
end
