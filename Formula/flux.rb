# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Flux < Formula
  desc "Flux CLI"
  homepage "https://fluxcd.io/"
  version "0.18.3"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.3/flux_0.18.3_darwin_arm64.tar.gz"
      sha256 "928f93f82bc7359d1c82980b34ec479b1c02371f9b7724a91ff93a61ac08debe"
    end
    if Hardware::CPU.intel?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.3/flux_0.18.3_darwin_amd64.tar.gz"
      sha256 "aaf93adef9c3f9c3340e7545126d7aea8a29051ee70d62024765d23f1af1f5a4"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.3/flux_0.18.3_linux_amd64.tar.gz"
      sha256 "848c7d135f851a64983626d231123b3570aa2b65d74da136a14a7c1ea807cc46"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.3/flux_0.18.3_linux_arm64.tar.gz"
      sha256 "3c6817fd3459bf50d73d4f5d90a903a3db1f0e4805be8104aadb0e9013f9146a"
    end
  end

  def install
    bin.install "flux"

    bash_output = Utils.safe_popen_read(bin/"flux", "completion", "bash")
    (bash_completion/"flux").write bash_output

    zsh_output = Utils.safe_popen_read(bin/"flux", "completion", "zsh")
    (zsh_completion/"_flux").write zsh_output

    fish_output = Utils.safe_popen_read(bin/"flux", "completion", "fish")
    (fish_completion/"flux.fish").write fish_output
  end

  test do
    system "#{bin}/flux --version"
  end
end
