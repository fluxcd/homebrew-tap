# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Flux < Formula
  desc "Flux CLI"
  homepage "https://fluxcd.io/"
  version "0.18.2"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.2/flux_0.18.2_darwin_amd64.tar.gz"
      sha256 "05ab02d27bcd0a412fa560a23204161c33732efe4b5cb99781351230ee09fb8c"
    end
    if Hardware::CPU.arm?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.2/flux_0.18.2_darwin_arm64.tar.gz"
      sha256 "0fe98caa8b4bd9d6d41726a32eb4c8051b56b89504599513fe146fa958d0646c"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.2/flux_0.18.2_linux_amd64.tar.gz"
      sha256 "2138c0ef989cfdb0f197b62309283c25aaf06334c8c40a6e3dfd98daf21fffe1"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/fluxcd/flux2/releases/download/v0.18.2/flux_0.18.2_linux_arm64.tar.gz"
      sha256 "c45b2d28768643cea322d1908e02fd91752847ab682e967ece4b243485658340"
    end
  end

  def install
    bin.install "flux"

    bash_output = Utils.safe_popen_read(bin/"flux", "completion", "bash")
    (bash_completion/"flux").write bash_output

    zsh_output = Utils.safe_popen_read(bin/"flux", "completion", "zsh")
    (zsh_completion/"_flux").write zsh_output

    fish_output = Utils.safe_popen_read(bin/"flux", "completion", "fish")
    (fish_completion/"flux.fish").write fish_output
  end

  test do
    system "#{bin}/flux --version"
  end
end
